---
// No props needed as we'll pull from localStorage
---

<div class="w-full p-2 mt-8 rounded-2xl lg:rounded-full sm:flex mx-auto max-w-sm bg-white shadow-box shadow-gray-500/20">
  <div class="relative flex w-full gap-2">
    <input
      type="text"
      id="savedStudioSearch"
      class="block w-full h-10 px-4 py-2 text-sm text-blue-700 border border-transparent appearance-none rounded-xl lg:rounded-full bg-gray-50 placeholder-gray-700 focus:border-gray-500 focus:bg-transparent focus:outline-none focus:ring-indigo-300 sm:text-sm transition-all duration-200"
      placeholder="Search saved studios..."
    />
    <button
      id="clearSavedSearch"
      class="hidden shrink-0 h-10 px-4 py-2 text-sm font-semibold text-white transition-all duration-200 rounded-full bg-gradient-to-b from-blue-500 to-indigo-600 hover:to-indigo-700 shadow-button shadow-blue-600/50 focus:ring-2 focus:ring-blue-950 focus:ring-offset-2 ring-offset-gray-200 hover:shadow-none whitespace-nowrap"
    >
      Clear
    </button>
  </div>
</div>

<script>
  const searchInput = document.getElementById('savedStudioSearch') as HTMLInputElement;
  const clearButton = document.getElementById('clearSavedSearch');
  const studiosGrid = document.getElementById('savedStudiosGrid');
  const emptyState = document.getElementById('emptyState');

  function searchSavedStudios(searchTerm: string) {
    const savedStudios = JSON.parse(localStorage.getItem('bookmarkedStudios') || '[]');

    if (searchTerm.length < 2) {
      // Show all saved studios
      if (savedStudios.length === 0) {
        emptyState?.classList.remove('hidden');
        studiosGrid?.classList.add('hidden');
      } else {
        emptyState?.classList.add('hidden');
        studiosGrid?.classList.remove('hidden');
        renderSavedStudios(savedStudios);
      }
      clearButton?.classList.add('hidden');
      return;
    }

    clearButton?.classList.remove('hidden');
    const searchTermLower = searchTerm.toLowerCase();

    // Filter saved studios
    const filteredStudios = savedStudios.filter(studio => 
      studio.title.toLowerCase().includes(searchTermLower) ||
      studio.description.toLowerCase().includes(searchTermLower) ||
      studio.tags.some((tag: string) => tag.toLowerCase().includes(searchTermLower)) ||
      studio.category.some((cat: string) => cat.toLowerCase().includes(searchTermLower))
    );

    renderSavedStudios(filteredStudios);
  }

  function renderSavedStudios(studios: any[]) {
    if (studiosGrid) {
      studiosGrid.innerHTML = studios.map(studio => `
        <li class="group rounded-2xl overflow-hidden shadow-box shadow-gray-500/20 transition-all duration-300 hover:shadow-none studio-card">
          <a href="/studios/${studio.slug}" class="block">
            <div class="bg-white">
              <div class="relative flex items-end justify-center overflow-hidden border-b border-gray-100">
                <img
                  class="group-hover:scale-105 duration-300 aspect-[2/1] object-cover w-full"
                  src="${studio.image.url}"
                  alt="${studio.image.alt}"
                  loading="lazy"
                />
              </div>
              <div class="p-4">
                <div class="flex flex-wrap gap-1">
                  ${studio.tags.map(tag => `
                    <span class="inline-flex items-center px-2 py-0.5 text-xs font-medium text-gray-600 rounded-full bg-gray-50 ring-1 ring-inset ring-gray-500/10">
                      ${tag}
                    </span>
                  `).join('')}
                </div>
                <h3 class="mt-3 text-lg font-semibold tracking-tight text-blue-950">${studio.title}</h3>
                <p class="mt-1 text-sm text-gray-600 line-clamp-2">${studio.description}</p>
                <div class="mt-2 flex items-center justify-between">
                  <div class="flex gap-2">
                    ${studio.category.map(cat => `
                      <span class="text-xs font-mono uppercase text-blue-600">
                        ${cat}
                      </span>
                    `).join('')}
                  </div>
                  <span class="text-xs font-medium text-indigo-600">${studio.price}</span>
                </div>
              </div>
            </div>
          </a>
        </li>
      `).join('');
    }
  }

  function clearSearch() {
    if (searchInput) {
      searchInput.value = '';
      clearButton?.classList.add('hidden');
      // Show all saved studios
      const savedStudios = JSON.parse(localStorage.getItem('bookmarkedStudios') || '[]');
      if (savedStudios.length === 0) {
        emptyState?.classList.remove('hidden');
        studiosGrid?.classList.add('hidden');
      } else {
        emptyState?.classList.add('hidden');
        studiosGrid?.classList.remove('hidden');
        renderSavedStudios(savedStudios);
      }
    }
  }

  searchInput?.addEventListener('input', (e) => {
    const searchTerm = (e.target as HTMLInputElement).value;
    searchSavedStudios(searchTerm);
  });

  clearButton?.addEventListener('click', clearSearch);
</script> 